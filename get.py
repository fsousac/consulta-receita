import sqlite3


def get_estabelecimentos_por_estado(uf, limit=0):
    uf = uf.upper()
    connection = sqlite3.connect(
        "C:/Users/felipe.coelho/Documents/programms/cnpj-sqlite/dados-publicos/cnpj.db")
    cursor = connection.cursor()
    if limit == 0:
        show = cursor.execute(
            f"SELECT * FROM estabelecimento WHERE uf = '{uf}'").fetchall()
    else:
        show = cursor.execute(
            f"SELECT * FROM estabelecimento WHERE uf = '{uf}' LIMIT {limit}").fetchall()
    print(show)


# get_estabelecimentos_por_estado("df")


def deletar_cnaes():
    lista = ['0111301', '0111302', '0111303', '0111399', '0112101', '0112102', '0112199', '0113000', '0114800', '0115600', '0116401', '0116402', '0116403', '0116499', '0119901', '0119902', '0119903', '0119904', '0119905', '0119906', '0119907', '0119908', '0119909', '0119999', '0121101', '0121102', '0122900', '0131800', '0132600', '0133401', '0133402', '0133403', '0133404', '0133405', '0133406', '0133407', '0133408', '0133409', '0133410', '0133411', '0133499', '0134200', '0135100', '0139301', '0139302', '0139303', '0139304', '0139305', '0139306', '0139399', '0141501', '0141502', '0142300', '0151201', '0151202', '0151203', '0152101', '0152102', '0152103', '0153901', '0153902', '0154700', '0155501', '0155502', '0155503', '0155504', '0155505', '0159801', '0159803', '0159804', '0159899', '0161001', '0161002', '0161003', '0161099', '0162801', '0162802', '0162803', '0162899', '0163600', '0170900', '0210101', '0210102', '0210103', '0210104', '0210105', '0210106', '0210107', '0210108', '0210109', '0210199', '0220901', '0220902', '0220903', '0220904', '0220905', '0220906', '0220999', '0230600', '0311601', '0311602', '0311603', '0311604', '0312401', '0312402', '0312403', '0312404', '0321301', '0321302', '0321303', '0321304', '0321305', '0321399', '0322101', '0322102', '0322103', '0322104', '0322105', '0322106', '0322107', '0322199', '0500301', '0500302', '0600001', '0600002', '0600003', '0710301', '0710302', '0721901', '0721902', '0722701', '0722702', '0723501', '0723502', '0724301', '0724302', '0725100', '0729401', '0729402', '0729403', '0729404', '0729405', '0810001', '0810002', '0810003', '0810004', '0810005', '0810006', '0810007', '0810008', '0810009', '0810010', '0810099', '0891600', '0892401', '0892402', '0892403', '0893200', '0899101', '0899102', '0899103', '0899199', '0910600', '0990401', '0990402', '0990403', '1011201', '1011202', '1011203', '1011204', '1011205', '1012101', '1012102', '1012103', '1012104', '1013901', '1013902', '1020101', '1020102', '1031700', '1032501', '1032599', '1033301', '1033302', '1041400', '1042200', '1043100', '1051100', '1052000', '1053800', '1061901', '1061902', '1062700', '1063500', '1064300', '1065101', '1065102', '1065103', '1066000', '1069400', '1071600', '1072401', '1072402', '1081301', '1081302', '1082100', '1091100', '1092900', '1093701', '1093702', '1094500', '1095300', '1096100', '1099601', '1099602', '1099603', '1099605', '1099606', '1099699', '1111901', '1111902', '1112700', '1113501', '1113502', '1121600', '1122401', '1122402', '1122403', '1122499', '1210700', '1220401', '1220402', '1220403', '1220499', '1311100', '1312000', '1313800', '1314600', '1321900', '1322700', '1323500', '1330800', '1340501', '1340502', '1340599', '1351100', '1352900', '1353700', '1354500', '1359600', '1411801', '1412601', '1412602', '1413401', '1413402', '1414200', '1421500', '1422300', '1510600', '1529700', '1621800', '1622601', '1629301', '1629302', '1710900', '1721400', '1722200', '1731100', '1732000', '1733800', '1741902', '1742799', '1749400', '1910100', '1921700', '1922501', '1922502', '1922599', '1931400', '1932200', '2011800', '2012600', '2013400', '2014200', '2019301', '2019399', '2021500', '2022300', '2029100', '2031200', '2032100', '2033900', '2040100', '2051700', '2052500', '2061400', '2062200', '2063100', '2071100', '2072000',
             '2073800', '2091600', '2092401', '2092402', '2092403', '2093200', '2094100', '2099101', '2099199', '2110600', '2211100', '2219600', '2221800', '2222600', '2223400', '2229301', '2229302', '2229303', '2229399', '2311700', '2312500', '2319200', '2320600', '2330301', '2330302', '2330303', '2330304', '2330305', '2330399', '2341900', '2342701', '2342702', '2349401', '2349499', '2391501', '2392300', '2411300', '2412100', '2421100', '2422901', '2422902', '2423701', '2423702', '2424501', '2424502', '2431800', '2439300', '2441501', '2441502', '2442300', '2443100', '2449101', '2449102', '2449103', '2449199', '2451200', '2452100', '2511000', '2512800', '2513600', '2521700', '2522500', '2531401', '2531402', '2532201', '2532202', '2539000', '2541100', '2542000', '2543800', '2550101', '2550102', '2591800', '2592601', '2592602', '2593400', '2599301', '2599399', '2610800', '2621300', '2622100', '2631100', '2632900', '2640000', '2651500', '2652300', '2660400', '2670101', '2670102', '2680900', '2710401', '2710402', '2710403', '2721000', '2722801', '2722802', '2731700', '2732500', '2733300', '2740601', '2740602', '2751100', '2759701', '2759799', '2790201', '2790202', '2790299', '2811900', '2812700', '2813500', '2814301', '2814302', '2815101', '2815102', '2821601', '2821602', '2822401', '2822402', '2823200', '2824101', '2824102', '2825900', '2829101', '2829199', '2831300', '2832100', '2833000', '2840200', '2851800', '2852600', '2853400', '2854200', '2861500', '2862300', '2863100', '2864000', '2865800', '2866600', '2869100', '2910701', '2910702', '2910703', '2920401', '2920402', '2930101', '2930102', '2930103', '2941700', '2942500', '2943300', '2944100', '2945000', '2949201', '2949299', '2950600', '3011301', '3011302', '3012100', '3031800', '3032600', '3041500', '3042300', '3050400', '3091100', '3092000', '3099700', '3102100', '3103900', '3240001', '3292201', '3292202', '3299004', '3311200', '3312102', '3312103', '3312104', '3313901', '3313902', '3313999', '3314701', '3314702', '3314703', '3314704', '3314705', '3314706', '3314707', '3314708', '3314709', '3314710', '3314711', '3314712', '3314713', '3314714', '3314715', '3314716', '3314717', '3314718', '3314719', '3314720', '3314721', '3314722', '3314799', '3315500', '3316301', '3316302', '3317101', '3317102', '3319800', '3321000', '3329501', '3511500', '3512300', '3514000', '3520401', '3530100', '3600601', '3701100', '3702900', '3811400', '3812200', '3821100', '3822000', '3831901', '3831999', '3832700', '3839401', '3839499', '3900500', '4120400', '4211101', '4211102', '4212000', '4213800', '4221901', '4221902', '4221903', '4221904', '4221905', '4222701', '4291000', '4292801', '4292802', '4299501', '4299599', '4311801', '4311802', '4312600', '4313400', '4319300', '4321500', '4322301', '4322302', '4322303', '4329101', '4329102', '4329103', '4329104', '4329105', '4329199', '4330401', '4330403', '4330405', '4330499', '4391600', '4399101', '4399102', '4399103', '4399104', '4399105', '4399199', '4520001', '4520003', '4520007', '4543900', '4683400', '6110801', '6110802', '6110803', '6110899', '6120501', '6120502', '6120599', '6130200', '6190601', '6190602', '6190699', '6209100', '6424704', '7112000', '7119701', '7119702', '7119704', '7119799', '7120100', '7420002', '7490103', '8122200', '8130300', '9511800', '9512600', '9521500']
    connection = sqlite3.connect(
        "C:/Users/felipe.coelho/Documents/programms/cnpj-sqlite/dados-publicos/cnpj.db")
    cursor = connection.cursor()
    count = 0
    # for i in lista:

    #     show = cursor.execute(
    #         f"SELECT * FROM estabelecimento WHERE cnae_fiscal_secundaria IN {lista} ").fetchall()
    #     print(show)
    #     count += 1
    #     print(f"deletado {count}/{len(lista)}")

    empresas = cursor.execute(
        f"SELECT cnae_fiscal_secundaria , cnae_fiscal FROM estabelecimento LIMIT 10;").fetchall()
    for atual_emp in empresas:
        count += 1
        cp = atual_emp[1]
        # cs_str = atual_emp[0]
        # cs = cs_str.split(',')
        # for m in cs:
        #     if m in lista:
        #         break
        #     elif m == cs[-1] and cp not in lista:
        #         cursor.execute(
        #             f"DELETE FROM estabelecimento WHERE cnae_fiscal_secundaria = '{cs_str}' AND cnae_fiscal = '{cp}'")
        if cp not in lista:
            cursor.execute(
                f"DELETE FROM estabelecimento WHERE cnae_fiscal = '{cp}'")
        print(count)


# deletar_cnaes()
